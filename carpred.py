# -*- coding: utf-8 -*-
"""carpred.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Sf4IMy4ntdDkfrxTz1NQiewLWIacCwty
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error

path = '/content/car data.csv'
df = pd.read_csv(path)

print("First five rows of the dataset:")
print(df.head())

print("\nDataset Info:")
print(df.info())
print("\nMissing Values:\n", df.isnull().sum())

if 'Car_Name' in df.columns:
    df.drop(['Car_Name'], axis=1, inplace=True)

cat_cols = df.select_dtypes(include=['object']).columns
le = LabelEncoder()
for col in cat_cols:
    df[col] = le.fit_transform(df[col])


X = df.drop('Selling_Price', axis=1)
y = df['Selling_Price']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)


model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

r2 = r2_score(y_test, y_pred)
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_pred, y_test)

print("\nðŸ“Š Model Performance:")
print("RÂ² Score:", r2)
print("Mean Absolute Error:", mae)
print("Mean Squared Error:", mse)

plt.figure(figsize=(7,5))
sns.scatterplot(x=y_test, y=y_pred)
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual vs Predicted Car Prices")
plt.show()

importance = pd.Series(model.coef_, index=df.drop('Selling_Price', axis=1).columns)
importance.nlargest(10).plot(kind='barh', color='teal')
plt.title("Top 10 Features Affecting Car Price")
plt.xlabel("Coefficient Value")
plt.ylabel("Feature")
plt.show()